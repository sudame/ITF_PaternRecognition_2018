source('~/workspace/PatternRecognition/CNN/ex3_7.R', echo=TRUE)
remove(list = ls())
# Kaggle用テストデータ設定
test.Kaggle <- read.csv('data/test.csv', header=TRUE)
test.Kaggle <- data.matrix(test.Kaggle)
test.Kaggle <- t(test.Kaggle/255)
test.array.Kaggle <- test.Kaggle
dim(test.array.Kaggle) <- c(28, 28, 1, ncol(test.Kaggle))
train <- read.csv('./data/train.csv', header = TRUE)
train <- data.matrix(train)
train.x <- train[, -1]
train.y <- train[, 1]
train.x <- t(train.x/255)
data <- mx.symbol.Variable("data")
conv1 <- mx.symbol.Convolution(data=data, kernel=c(5,5), num_filter=20)
tanh1 <- mx.symbol.Activation(data=conv1, act_type="tanh")
pool1 <- mx.symbol.Pooling(data=tanh1, pool_type="max", kernel=c(2,2), stride=c(2,2))
drop1 <- mx.symbol.Dropout(data=pool1, p=0.5)
conv2 <- mx.symbol.Convolution(data=drop1, kernel=c(5,5), num_filter=50)
tanh2 <- mx.symbol.Activation(data=conv2, act_type="tanh")
pool2 <- mx.symbol.Pooling(data=tanh2, pool_type="max", kernel=c(2,2), stride=c(2,2))
drop2 <- mx.symbol.Dropout(data=pool2, p=0.5)
flatten <- mx.symbol.Flatten(data=drop2)
fc1 <- mx.symbol.FullyConnected(data=flatten, num_hidden=50)
tanh3 <- mx.symbol.Activation(data=fc1, act_type="tanh")
drop3 <- mx.symbol.Dropout(data=tanh3, p=0.5)
fc2 <- mx.symbol.FullyConnected(data=drop3, num_hidden=10)
lenet <- mx.symbol.SoftmaxOutput(data=fc2)
train.array <- train.x
dim(train.array) <- c(28, 28, 1, ncol(train.x))
mx.set.seed(0)
devices = mx.cpu()
tic <- proc.time()
model.CNNtanhDrop <- mx.model.FeedForward.create(lenet, X=train.array, y=train.y, ctx=devices, num.round=30, array.batch.size=100, learning.rate=0.05, momentum=0.9, wd=0.00001, eval.metric=mx.metric.accuracy, batch.end.callback=mx.callback.log.train.metric(100))
remove(list = ls())
# Kaggle用テストデータ設定
test.Kaggle <- read.csv('data/test.csv', header=TRUE)
test.Kaggle <- data.matrix(test.Kaggle)
test.Kaggle <- t(test.Kaggle/255)
test.array.Kaggle <- test.Kaggle
dim(test.array.Kaggle) <- c(28, 28, 1, ncol(test.Kaggle))
train <- read.csv('./data/train.csv', header = TRUE)
train <- data.matrix(train)
train.x <- train[, -1]
train.y <- train[, 1]
train.x <- t(train.x/255)
data <- mx.symbol.Variable("data")
conv1 <- mx.symbol.Convolution(data=data, kernel=c(5,5), num_filter=20)
tanh1 <- mx.symbol.Activation(data=conv1, act_type="tanh")
pool1 <- mx.symbol.Pooling(data=tanh1, pool_type="max", kernel=c(2,2), stride=c(2,2))
drop1 <- mx.symbol.Dropout(data=pool1, p=0.5)
conv2 <- mx.symbol.Convolution(data=drop1, kernel=c(5,5), num_filter=50)
tanh2 <- mx.symbol.Activation(data=conv2, act_type="tanh")
pool2 <- mx.symbol.Pooling(data=tanh2, pool_type="max", kernel=c(2,2), stride=c(2,2))
drop2 <- mx.symbol.Dropout(data=pool2, p=0.5)
flatten <- mx.symbol.Flatten(data=drop2)
fc1 <- mx.symbol.FullyConnected(data=flatten, num_hidden=50)
tanh3 <- mx.symbol.Activation(data=fc1, act_type="tanh")
drop3 <- mx.symbol.Dropout(data=tanh3, p=0.5)
fc2 <- mx.symbol.FullyConnected(data=drop3, num_hidden=10)
lenet <- mx.symbol.SoftmaxOutput(data=fc2)
train.array <- train.x
dim(train.array) <- c(28, 28, 1, ncol(train.x))
mx.set.seed(0)
devices = mx.cpu()
tic <- proc.time()
model.CNNtanhDrop <- mx.model.FeedForward.create(lenet, X=train.array, y=train.y, ctx=devices, num.round=30, array.batch.size=100, learning.rate=0.05, momentum=0.9, wd=0.00001, eval.metric=mx.metric.accuracy, batch.end.callback=mx.callback.log.train.metric(100))
remove(list=ls())
library(nnet)
library(MASS)
# source("http://hosho.ees.hokudai.ac.jp/~kubo/log/2007/img07/plot.nn.txt")
ir <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), species=factor(c(rep("sv", 50), rep("c", 50), rep("sv", 50))))
stdsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
tstsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
hidden = c(1:100)
iter = c(1:10)
stdtrave = rep(0, length(hidden))
tsttrave = rep(0, length(hidden))
stdtr = matrix(0, length(iter), length(hidden))
tsttr = matrix(0, length(iter), length(hidden))
wtss <- as.list(NULL)
for(i in 1: length(hidden)){
for(j in 1:length(iter)){
mlpir <- nnet(species~., data=ir[stdsamp,], size=hidden[i], rang=0.5, decay=0.00, maxit=200)
stdout = predict(mlpir, ir[stdsamp,], type="class")
tstout = predict(mlpir, ir[tstsamp,], type="class")
stdtr[j, i] = mean(stdout != ir[stdsamp,]$species)
tsttr[j, i] = mean(tstout != ir[tstsamp,]$species)
if(i > length(wtss)){
wtss[i] <- mlpir$wts
} else {
wtss[[i]] <- c(mlpir$wts, wtss[[i]])
}
}
stdtrave[i] = mean(stdtr[, i])
tsttrave[i] = mean(tsttr[, i])
}
# 再代入誤り識別率のグラフの表示
plot(hidden, stdtrave, ylim = c(0, 0.4), type = "l", main = "再代入誤り識別率の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# 汎化誤差率のグラフの表示
plot(hidden, tsttrave, ylim = c(0, 0.4), type = "l", main = "汎化誤差の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# table(ir$species[stdsamp], predict(mlpir, ir[stdsamp,], type="class"))
# table(ir$species[tstsamp], predict(mlpir, ir[tstsamp,], type="class"))
stdminidx <- match(min(stdtrave), stdtrave)[1]
tstminidx <- match(min(tsttrave), tsttrave)[1]
hist(wtss[[stdminidx]], freq=TRUE, main = "再代入誤り率最小場合の結合係数", xlab = "重み", ylab = "頻度")
hist(wtss[[tstminidx]], freq=TRUE, main = "汎化誤差最小場合の結合係数", xlab = "重み", ylab = "頻度")
sample(1:50, 25)
s <- sample(1:10, 5)
s
-s
ir
ir(samp)
ir(samp)
ir(s)
ir <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), species=factor(c(rep("sv", 50), rep("c", 50), rep("sv", 50))))
ir(s)
ir
s
ir[s]
ir[s,]
ir[-s,]
remove(list=ls())
library(nnet)
library(MASS)
# source("http://hosho.ees.hokudai.ac.jp/~kubo/log/2007/img07/plot.nn.txt")
ir <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), species=factor(c(rep("sv", 50), rep("c", 50), rep("sv", 50))))
stdsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
tstsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
hidden = c(1:100)
iter = c(1:10)
stdtrave = rep(0, length(hidden))
tsttrave = rep(0, length(hidden))
stdtr = matrix(0, length(iter), length(hidden))
tsttr = matrix(0, length(iter), length(hidden))
wtss <- as.list(NULL)
for(i in 1: length(hidden)){
for(j in 1:length(iter)){
mlpir <- nnet(species~., data=ir[stdsamp,], size=hidden[i], rang=0.5, decay=0.00, maxit=200)
stdout = predict(mlpir, ir[stdsamp,], type="class")
tstout = predict(mlpir, ir[-stdsamp,], type="class")
stdtr[j, i] = mean(stdout != ir[stdsamp,]$species)
tsttr[j, i] = mean(tstout != ir[-stdsamp,]$species)
if(i > length(wtss)){
wtss[i] <- mlpir$wts
} else {
wtss[[i]] <- c(mlpir$wts, wtss[[i]])
}
}
stdtrave[i] = mean(stdtr[, i])
tsttrave[i] = mean(tsttr[, i])
}
remove(list=ls())
library(nnet)
library(MASS)
# source("http://hosho.ees.hokudai.ac.jp/~kubo/log/2007/img07/plot.nn.txt")
ir <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), species=factor(c(rep("sv", 50), rep("c", 50), rep("sv", 50))))
stdsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
tstsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
hidden = c(1:10)
iter = c(1:10)
stdtrave = rep(0, length(hidden))
tsttrave = rep(0, length(hidden))
stdtr = matrix(0, length(iter), length(hidden))
tsttr = matrix(0, length(iter), length(hidden))
wtss <- as.list(NULL)
for(i in 1: length(hidden)){
for(j in 1:length(iter)){
mlpir <- nnet(species~., data=ir[stdsamp,], size=hidden[i], rang=0.5, decay=0.00, maxit=200)
stdout = predict(mlpir, ir[stdsamp,], type="class")
tstout = predict(mlpir, ir[-stdsamp,], type="class")
stdtr[j, i] = mean(stdout != ir[stdsamp,]$species)
tsttr[j, i] = mean(tstout != ir[-stdsamp,]$species)
if(i > length(wtss)){
wtss[i] <- mlpir$wts
} else {
wtss[[i]] <- c(mlpir$wts, wtss[[i]])
}
}
stdtrave[i] = mean(stdtr[, i])
tsttrave[i] = mean(tsttr[, i])
}
# 再代入誤り識別率のグラフの表示
plot(hidden, stdtrave, ylim = c(0, 0.4), type = "l", main = "再代入誤り識別率の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# 汎化誤差率のグラフの表示
plot(hidden, tsttrave, ylim = c(0, 0.4), type = "l", main = "汎化誤差の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# table(ir$species[stdsamp], predict(mlpir, ir[stdsamp,], type="class"))
# table(ir$species[tstsamp], predict(mlpir, ir[tstsamp,], type="class"))
stdminidx <- match(min(stdtrave), stdtrave)[1]
tstminidx <- match(min(tsttrave), tsttrave)[1]
hist(wtss[[stdminidx]], freq=TRUE, main = "再代入誤り率最小場合の結合係数", xlab = "重み", ylab = "頻度")
hist(wtss[[tstminidx]], freq=TRUE, main = "汎化誤差最小場合の結合係数", xlab = "重み", ylab = "頻度")
remove(list=ls())
library(nnet)
library(MASS)
# source("http://hosho.ees.hokudai.ac.jp/~kubo/log/2007/img07/plot.nn.txt")
ir <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), species=factor(c(rep("sv", 50), rep("c", 50), rep("sv", 50))))
stdsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
tstsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
hidden = c(1:10)
iter = c(1:10)
stdtrave = rep(0, length(hidden))
tsttrave = rep(0, length(hidden))
stdtr = matrix(0, length(iter), length(hidden))
tsttr = matrix(0, length(iter), length(hidden))
wtss <- as.list(NULL)
for(i in 1: length(hidden)){
for(j in 1:length(iter)){
mlpir <- nnet(species~., data=ir[stdsamp,], size=hidden[i], rang=0.5, decay=0.00, maxit=200)
stdout = predict(mlpir, ir[stdsamp,], type="class")
tstout = predict(mlpir, ir[-stdsamp,], type="class")
stdtr[j, i] = mean(stdout != ir[stdsamp,]$species)
tsttr[j, i] = mean(tstout != ir[-stdsamp,]$species)
if(i > length(wtss)){
wtss[i] <- mlpir$wts
} else {
wtss[[i]] <- c(mlpir$wts, wtss[[i]])
}
}
stdtrave[i] = mean(stdtr[, i])
tsttrave[i] = mean(tsttr[, i])
}
# 再代入誤り識別率のグラフの表示
plot(hidden, stdtrave, ylim = c(0, 0.4), type = "l", main = "再代入誤り識別率の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# 汎化誤差率のグラフの表示
plot(hidden, tsttrave, ylim = c(0, 0.4), type = "l", main = "汎化誤差の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# table(ir$species[stdsamp], predict(mlpir, ir[stdsamp,], type="class"))
# table(ir$species[tstsamp], predict(mlpir, ir[tstsamp,], type="class"))
stdminidx <- match(min(stdtrave), stdtrave)[1]
tstminidx <- match(min(tsttrave), tsttrave)[1]
hist(wtss[[stdminidx]], freq=TRUE, main = "再代入誤り率最小場合の結合係数", xlab = "重み", ylab = "頻度")
hist(wtss[[tstminidx]], freq=TRUE, main = "汎化誤差最小場合の結合係数", xlab = "重み", ylab = "頻度")
remove(list=ls())
library(nnet)
library(MASS)
# source("http://hosho.ees.hokudai.ac.jp/~kubo/log/2007/img07/plot.nn.txt")
ir <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), species=factor(c(rep("sv", 50), rep("c", 50), rep("sv", 50))))
stdsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
tstsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
hidden = c(1:10)
iter = c(1:10)
stdtrave = rep(0, length(hidden))
tsttrave = rep(0, length(hidden))
stdtr = matrix(0, length(iter), length(hidden))
tsttr = matrix(0, length(iter), length(hidden))
wtss <- as.list(NULL)
for(i in 1: length(hidden)){
for(j in 1:length(iter)){
mlpir <- nnet(species~., data=ir[stdsamp,], size=hidden[i], rang=0.5, decay=0.00, maxit=200)
stdout = predict(mlpir, ir[stdsamp,], type="class")
tstout = predict(mlpir, ir[-stdsamp,], type="class")
stdtr[j, i] = mean(stdout == ir[stdsamp,]$species)
tsttr[j, i] = mean(tstout == ir[-stdsamp,]$species)
if(i > length(wtss)){
wtss[i] <- mlpir$wts
} else {
wtss[[i]] <- c(mlpir$wts, wtss[[i]])
}
}
stdtrave[i] = mean(stdtr[, i])
tsttrave[i] = mean(tsttr[, i])
}
# 再代入誤り識別率のグラフの表示
plot(hidden, stdtrave, ylim = c(0, 0.4), type = "l", main = "再代入誤り識別率の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# 汎化誤差率のグラフの表示
plot(hidden, tsttrave, ylim = c(0, 0.4), type = "l", main = "汎化誤差の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# table(ir$species[stdsamp], predict(mlpir, ir[stdsamp,], type="class"))
# table(ir$species[tstsamp], predict(mlpir, ir[tstsamp,], type="class"))
stdminidx <- match(min(stdtrave), stdtrave)[1]
tstminidx <- match(min(tsttrave), tsttrave)[1]
hist(wtss[[stdminidx]], freq=TRUE, main = "再代入誤り率最小場合の結合係数", xlab = "重み", ylab = "頻度")
hist(wtss[[tstminidx]], freq=TRUE, main = "汎化誤差最小場合の結合係数", xlab = "重み", ylab = "頻度")
remove(list=ls())
library(nnet)
library(MASS)
# source("http://hosho.ees.hokudai.ac.jp/~kubo/log/2007/img07/plot.nn.txt")
ir <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), species=factor(c(rep("sv", 50), rep("c", 50), rep("sv", 50))))
stdsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
tstsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
hidden = c(1:10)
iter = c(1:10)
stdtrave = rep(0, length(hidden))
tsttrave = rep(0, length(hidden))
stdtr = matrix(0, length(iter), length(hidden))
tsttr = matrix(0, length(iter), length(hidden))
wtss <- as.list(NULL)
for(i in 1: length(hidden)){
for(j in 1:length(iter)){
mlpir <- nnet(species~., data=ir[stdsamp,], size=hidden[i], rang=0.5, decay=0.00, maxit=200)
stdout = predict(mlpir, ir[stdsamp,], type="class")
tstout = predict(mlpir, ir[-stdsamp,], type="class")
stdtr[j, i] = mean(stdout == ir[stdsamp,]$species)
tsttr[j, i] = mean(tstout == ir[-stdsamp,]$species)
if(i > length(wtss)){
wtss[i] <- mlpir$wts
} else {
wtss[[i]] <- c(mlpir$wts, wtss[[i]])
}
}
stdtrave[i] = mean(stdtr[, i])
tsttrave[i] = mean(tsttr[, i])
}
# 再代入誤り識別率のグラフの表示
plot(hidden, stdtrave, ylim = c(0, 0.4), type = "l", main = "再代入誤り識別率の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# 汎化誤差率のグラフの表示
plot(hidden, tsttrave, ylim = c(0, 0.4), type = "l", main = "汎化誤差の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# table(ir$species[stdsamp], predict(mlpir, ir[stdsamp,], type="class"))
# table(ir$species[tstsamp], predict(mlpir, ir[tstsamp,], type="class"))
stdminidx <- match(min(stdtrave), stdtrave)[1]
tstminidx <- match(min(tsttrave), tsttrave)[1]
hist(wtss[[stdminidx]], freq=TRUE, main = "再代入誤り率最小場合の結合係数", xlab = "重み", ylab = "頻度")
hist(wtss[[tstminidx]], freq=TRUE, main = "汎化誤差最小場合の結合係数", xlab = "重み", ylab = "頻度")
remove(list=ls())
library(nnet)
library(MASS)
# source("http://hosho.ees.hokudai.ac.jp/~kubo/log/2007/img07/plot.nn.txt")
ir <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), species=factor(c(rep("sv", 50), rep("c", 50), rep("sv", 50))))
stdsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
tstsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
hidden = c(1:10)
iter = c(1:10)
stdtrave = rep(0, length(hidden))
tsttrave = rep(0, length(hidden))
stdtr = matrix(0, length(iter), length(hidden))
tsttr = matrix(0, length(iter), length(hidden))
wtss <- as.list(NULL)
for(i in 1: length(hidden)){
for(j in 1:length(iter)){
mlpir <- nnet(species~., data=ir[stdsamp,], size=hidden[i], rang=0.5, decay=0.00, maxit=200)
stdout = predict(mlpir, ir[stdsamp,], type="class")
tstout = predict(mlpir, ir[-stdsamp,], type="class")
stdtr[j, i] = mean(stdout != ir[stdsamp,]$species)
tsttr[j, i] = mean(tstout != ir[-stdsamp,]$species)
if(i > length(wtss)){
wtss[i] <- mlpir$wts
} else {
wtss[[i]] <- c(mlpir$wts, wtss[[i]])
}
}
stdtrave[i] = mean(stdtr[, i])
tsttrave[i] = mean(tsttr[, i])
}
# 再代入誤り識別率のグラフの表示
plot(hidden, stdtrave, ylim = c(0, 0.4), type = "l", main = "再代入誤り識別率の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# 汎化誤差率のグラフの表示
plot(hidden, tsttrave, ylim = c(0, 0.4), type = "l", main = "汎化誤差の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# table(ir$species[stdsamp], predict(mlpir, ir[stdsamp,], type="class"))
# table(ir$species[tstsamp], predict(mlpir, ir[tstsamp,], type="class"))
stdminidx <- match(min(stdtrave), stdtrave)[1]
tstminidx <- match(min(tsttrave), tsttrave)[1]
hist(wtss[[stdminidx]], freq=TRUE, main = "再代入誤り率最小場合の結合係数", xlab = "重み", ylab = "頻度")
hist(wtss[[tstminidx]], freq=TRUE, main = "汎化誤差最小場合の結合係数", xlab = "重み", ylab = "頻度")
remove(list=ls())
library(nnet)
library(MASS)
# source("http://hosho.ees.hokudai.ac.jp/~kubo/log/2007/img07/plot.nn.txt")
ir <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), species=factor(c(rep("sv", 50), rep("c", 50), rep("sv", 50))))
stdsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
tstsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
hidden = c(1:10)
iter = c(1:10)
stdtrave = rep(0, length(hidden))
tsttrave = rep(0, length(hidden))
stdtr = matrix(0, length(iter), length(hidden))
tsttr = matrix(0, length(iter), length(hidden))
wtss <- as.list(NULL)
for(i in 1: length(hidden)){
for(j in 1:length(iter)){
mlpir <- nnet(species~., data=ir[stdsamp,], size=hidden[i], rang=0.5, decay=0.00, maxit=200)
stdout = predict(mlpir, ir[stdsamp,], type="class")
tstout = predict(mlpir, ir[-stdsamp,], type="class")
stdtr[j, i] = mean(stdout != ir[stdsamp,]$species)
tsttr[j, i] = mean(tstout != ir[-stdsamp,]$species)
if(i > length(wtss)){
wtss[i] <- mlpir$wts
} else {
wtss[[i]] <- c(mlpir$wts, wtss[[i]])
}
}
stdtrave[i] = mean(stdtr[, i])
tsttrave[i] = mean(tsttr[, i])
}
# 再代入誤り識別率のグラフの表示
plot(hidden, 1-stdtrave, ylim = c(0, 0.4), type = "l", main = "再代入誤り識別率の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# 汎化誤差率のグラフの表示
plot(hidden, 1-tsttrave, ylim = c(0, 0.4), type = "l", main = "汎化誤差の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# table(ir$species[stdsamp], predict(mlpir, ir[stdsamp,], type="class"))
# table(ir$species[tstsamp], predict(mlpir, ir[tstsamp,], type="class"))
stdminidx <- match(min(stdtrave), stdtrave)[1]
tstminidx <- match(min(tsttrave), tsttrave)[1]
hist(wtss[[stdminidx]], freq=TRUE, main = "再代入誤り率最小場合の結合係数", xlab = "重み", ylab = "頻度")
hist(wtss[[tstminidx]], freq=TRUE, main = "汎化誤差最小場合の結合係数", xlab = "重み", ylab = "頻度")
remove(list=ls())
library(nnet)
library(MASS)
# source("http://hosho.ees.hokudai.ac.jp/~kubo/log/2007/img07/plot.nn.txt")
ir <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), species=factor(c(rep("sv", 50), rep("c", 50), rep("sv", 50))))
stdsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
tstsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
hidden = c(1:10)
iter = c(1:10)
stdtrave = rep(0, length(hidden))
tsttrave = rep(0, length(hidden))
stdtr = matrix(0, length(iter), length(hidden))
tsttr = matrix(0, length(iter), length(hidden))
wtss <- as.list(NULL)
for(i in 1: length(hidden)){
for(j in 1:length(iter)){
mlpir <- nnet(species~., data=ir[stdsamp,], size=hidden[i], rang=0.5, decay=0.00, maxit=200)
stdout = predict(mlpir, ir[stdsamp,], type="class")
tstout = predict(mlpir, ir[-stdsamp,], type="class")
stdtr[j, i] = mean(stdout != ir[stdsamp,]$species)
tsttr[j, i] = mean(tstout != ir[-stdsamp,]$species)
if(i > length(wtss)){
wtss[i] <- mlpir$wts
} else {
wtss[[i]] <- c(mlpir$wts, wtss[[i]])
}
}
stdtrave[i] = mean(stdtr[, i])
tsttrave[i] = mean(tsttr[, i])
}
# 再代入誤り識別率のグラフの表示
plot(hidden, 1-stdtrave, ylim = c(0, 0.8), type = "l", main = "再代入誤り識別率の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# 汎化誤差率のグラフの表示
plot(hidden, 1-tsttrave, ylim = c(0, 0.8), type = "l", main = "汎化誤差の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# table(ir$species[stdsamp], predict(mlpir, ir[stdsamp,], type="class"))
# table(ir$species[tstsamp], predict(mlpir, ir[tstsamp,], type="class"))
stdminidx <- match(min(stdtrave), stdtrave)[1]
tstminidx <- match(min(tsttrave), tsttrave)[1]
hist(wtss[[stdminidx]], freq=TRUE, main = "再代入誤り率最小場合の結合係数", xlab = "重み", ylab = "頻度")
hist(wtss[[tstminidx]], freq=TRUE, main = "汎化誤差最小場合の結合係数", xlab = "重み", ylab = "頻度")
remove(list=ls())
library(nnet)
library(MASS)
# source("http://hosho.ees.hokudai.ac.jp/~kubo/log/2007/img07/plot.nn.txt")
ir <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), species=factor(c(rep("sv", 50), rep("c", 50), rep("sv", 50))))
stdsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
tstsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
hidden = c(1:10)
iter = c(1:10)
stdtrave = rep(0, length(hidden))
tsttrave = rep(0, length(hidden))
stdtr = matrix(0, length(iter), length(hidden))
tsttr = matrix(0, length(iter), length(hidden))
wtss <- as.list(NULL)
for(i in 1: length(hidden)){
for(j in 1:length(iter)){
mlpir <- nnet(species~., data=ir[stdsamp,], size=hidden[i], rang=0.5, decay=0.00, maxit=200)
stdout = predict(mlpir, ir[stdsamp,], type="class")
tstout = predict(mlpir, ir[-stdsamp,], type="class")
stdtr[j, i] = mean(stdout == ir[stdsamp,]$species)
tsttr[j, i] = mean(tstout == ir[-stdsamp,]$species)
if(i > length(wtss)){
wtss[i] <- mlpir$wts
} else {
wtss[[i]] <- c(mlpir$wts, wtss[[i]])
}
}
stdtrave[i] = mean(stdtr[, i])
tsttrave[i] = mean(tsttr[, i])
}
# 再代入誤り識別率のグラフの表示
plot(hidden, stdtrave, type = "l", main = "再代入誤り識別率の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# 汎化誤差率のグラフの表示
plot(hidden, tsttrave, type = "l", main = "汎化誤差の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# table(ir$species[stdsamp], predict(mlpir, ir[stdsamp,], type="class"))
# table(ir$species[tstsamp], predict(mlpir, ir[tstsamp,], type="class"))
stdminidx <- match(min(stdtrave), stdtrave)[1]
tstminidx <- match(min(tsttrave), tsttrave)[1]
hist(wtss[[stdminidx]], freq=TRUE, main = "再代入誤り率最小場合の結合係数", xlab = "重み", ylab = "頻度")
hist(wtss[[tstminidx]], freq=TRUE, main = "汎化誤差最小場合の結合係数", xlab = "重み", ylab = "頻度")
remove(list=ls())
library(nnet)
library(MASS)
# source("http://hosho.ees.hokudai.ac.jp/~kubo/log/2007/img07/plot.nn.txt")
ir <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]), species=factor(c(rep("sv", 50), rep("c", 50), rep("sv", 50))))
stdsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
tstsamp <- c(sample(1:50, 25), sample(51:100, 25), sample(101:150, 25))
hidden = c(1:10)
iter = c(1:10)
stdtrave = rep(0, length(hidden))
tsttrave = rep(0, length(hidden))
stdtr = matrix(0, length(iter), length(hidden))
tsttr = matrix(0, length(iter), length(hidden))
wtss <- as.list(NULL)
for(i in 1: length(hidden)){
for(j in 1:length(iter)){
mlpir <- nnet(species~., data=ir[stdsamp,], size=hidden[i], rang=0.5, decay=0.00, maxit=200)
stdout = predict(mlpir, ir[stdsamp,], type="class")
tstout = predict(mlpir, ir[-stdsamp,], type="class")
stdtr[j, i] = mean(stdout != ir[stdsamp,]$species)
tsttr[j, i] = mean(tstout != ir[-stdsamp,]$species)
if(i > length(wtss)){
wtss[i] <- mlpir$wts
} else {
wtss[[i]] <- c(mlpir$wts, wtss[[i]])
}
}
stdtrave[i] = mean(stdtr[, i])
tsttrave[i] = mean(tsttr[, i])
}
# 再代入誤り識別率のグラフの表示
plot(hidden, stdtrave, ylim = c(0, 0.4), type = "l", main = "再代入誤り識別率の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# 汎化誤差率のグラフの表示
plot(hidden, tsttrave, ylim = c(0, 0.4), type = "l", main = "汎化誤差の遷移", xlab = "隠れ素子の数", ylab = "誤識別率")
# table(ir$species[stdsamp], predict(mlpir, ir[stdsamp,], type="class"))
# table(ir$species[tstsamp], predict(mlpir, ir[tstsamp,], type="class"))
stdminidx <- match(min(stdtrave), stdtrave)[1]
tstminidx <- match(min(tsttrave), tsttrave)[1]
hist(wtss[[stdminidx]], freq=TRUE, main = "再代入誤り率最小場合の結合係数", xlab = "重み", ylab = "頻度")
hist(wtss[[tstminidx]], freq=TRUE, main = "汎化誤差最小場合の結合係数", xlab = "重み", ylab = "頻度")
